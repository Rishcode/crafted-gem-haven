

// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://pmcwgtxmzfudslcfrjte.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBtY3dndHhtemZ1ZHNsY2ZyanRlIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzg5NjA2MTYsImV4cCI6MjA1NDUzNjYxNn0.0Hqah1sZxTI2V6eSzCTzctua2T144Fg4jjfpJcaN9FU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Create the base client
const baseClient = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Create a properly extended client that preserves all original functionality
const supabase = {
  ...baseClient,
  auth: {
    ...baseClient.auth,
    admin: {
      // This is a simplified frontend mock - in a real app, this would be a server function
      getUserById: async (userId: string) => {
        // In a frontend app, we can't use the admin API directly
        // This is just a mock for demonstration purposes
        try {
          // Get the user's email from another table or source
          // For this demo, we'll just return a placeholder
          // In a real app, you would handle this via a secure API or edge function
          return {
            data: {
              user: {
                id: userId,
                email: `user-${userId.substring(0, 6)}@example.com`, // Fake email for demo
              }
            },
            error: null
          };
        } catch (error) {
          return {
            data: null,
            error
          };
        }
      }
    }
  }
};

export { supabase };

